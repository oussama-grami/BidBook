scalar DateTime
 enum Category {
FICTION
NON_FICTION
SCIENCE
HISTORY
BIOGRAPHY
ROMANCE
OTHER
ADVENTURE
FANTASY
POETRY
ART
NOVEL
THRILLER
PHILOSOPHY
RELIGION
TECHNOLOGY
}

enum Language {
ENGLISH
GERMAN
FRENCH
ITALIAN
SPANISH
OTHER
}
enum BidStatus {
    PENDING
    ACCEPTED
    REJECTED
}
type User {
    id: Int!
    firstName: String!
    lastName: String!
    imageUrl: String!
}

type Comment {
id: Int!
content: String!
user: User
createdAt: DateTime!
book: Book!
}

type Bid {
  id: Int!
  amount: Float!
  bidder: User!
  createdAt: DateTime!
  book: Book!
  bidStatus: BidStatus!
  timestamp: DateTime
}
type Book {
    id: Int!
    title: String!
    author: String!
    picture: String!
    owner: User!
    comments: [Comment!]
    favorites: [Favorite!]
    bids: [Bid!]
    price: Float
    totalPages: Int
    damagedPages: Int
    age: Int
    edition: Int
    rating: Float
    votes: Int
    language: Language
    editor: String
    category: Category
}
type Favorite {
    id: Int!
    user: User!
    book: Book!
}

 type Query {
    viewBooks(limit: Int, offset: Int): [Book!]!
    bookDetails(id: Int!): Book
    myBids(limit: Int, offset: Int): [Book!]!
    highestBidForBook(bookId: Int!): Bid
}
type Mutation {
    addFavorite(userId: Int!, bookId: Int!): Favorite!
    removeFavorite(userId: Int!, bookId: Int!): Boolean!
    addCommentToBook(bookId: Int!, userId: Int!, content: String!): Comment
    removeComment(commentId: Int!): Boolean!
    rateBook(bookId: Int!, userId: Int!, rating: Int!): Book!
    createBid( userId: Int!,bookId: Int!, amount: Float!): Bid!
    updateBid(bookId: Int!, userId: Int!, amount: Float!): Bid!
    
}
