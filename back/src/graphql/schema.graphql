scalar DateTime
enum Category {
    FICTION
    NON_FICTION
    SCIENCE
    HISTORY
    BIOGRAPHY
    ROMANCE
    OTHER
    ADVENTURE
    FANTASY
    POETRY
    ART
    NOVEL
    THRILLER
    PHILOSOPHY
    RELIGION
    TECHNOLOGY
}

enum Language {
    ENGLISH
    GERMAN
    FRENCH
    ITALIAN
    SPANISH
    OTHER
}
enum BidStatus {
    PENDING
    ACCEPTED
    REJECTED
}
type User {
    id: Int!
    firstName: String!
    lastName: String!
    imageUrl: String!
}

type Comment {
    id: Int!
    content: String!
    user: User
    createdAt: DateTime!
    book: Book!
}

type Bid {
    id: Int!
    amount: Float!
    bidder: User!
    createdAt: DateTime!
    book: Book!
    bidStatus: BidStatus!
}
type Book {
    id: Int!
    title: String!
    author: String!
    picture: String!
    owner: User!
    comments: [Comment!]
    favorites: [Favorite!]
    bids: [Bid!]
    price: Float
    totalPages: Int
    damagedPages: Int
    age: Int
    edition: Int
    language: Language
    editor: String
    category: Category
    ratings: [UserRating!]
    createdAt: DateTime!
    isSold: Boolean!
}
type Favorite {
    id: Int!
    user: User!
    book: Book!
}

type UserRating {
    id: Int!
    user: User!
    book: Book!
    rate: Float!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Subscription {
    bookFavoritesUpdated(bookId: Int!): Book!
    commentAdded(bookId: Int!): Comment!
    commentRemoved(bookId: Int!): Int!
    bookRatingUpdated(bookId: Int!): Book!
}
type Query {
    viewBooks(limit: Int, offset: Int): [Book!]!
    bookDetails(id: Int!): Book
    myBids(limit: Int, offset: Int): [Bid!]!
    highestBidForBook(bookId: Int!): Bid
    userBookRating(userId: Int!, bookId: Int!): UserRating
    book(id: Int!): Book
    myBooks(limit: Int, offset: Int): [Book!]!
}
type Mutation {
    addFavorite( bookId: Int!): Favorite!
    removeFavorite(bookId: Int!): Boolean!
    addCommentToBook(bookId: Int!, content: String!): Comment
    removeComment(commentId: Int!): Boolean!
    createBid(bookId: Int!, amount: Float!): Bid!
    updateBid(bookId: Int!, amount: Float!): Bid!
    addRate(bookId: Int!, rate: Float!): UserRating!
    updateRate(bookId: Int!, rate: Float!): UserRating!
    deleteRate(bookId: Int!): Boolean!
    
}
